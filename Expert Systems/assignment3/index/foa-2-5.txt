

FOA: 2.5 Implementation





FOA Home

 | UP: Extracting Lexical Features



Implementation

The range of potential implementations of the basic techniques discussed
in this chapter and subsequent ones is quite remarkable. Each depends on
features of the specific application, available hardware, etc.: \item
using a massively parallel super computer of the mid-1980s to provide
current news to financial analysts [<A
HREF="bibrefs.html#REF378">REF378] ; \item searching for file names
as part of the MacOS Finder on a single personal computer, then being
extended to support file \defn{content} searching as part of the MacOS
Sherlock utility;


 <A
HREF="http://ftp://ftp.cs.cornell.edu/pub/smart/">SMART is a classic
software suite designed to support experimentation into basic IR
techniques (see Section &sect;3.4.3 for
more details);


 providing a generic utility for <A
HREF="http://www.mds.rmit.edu.au/mg/welcome.html">Managing Gigabytes
(MG) for example building an index for a CD-ROM or DVD.


making all of
the pages on a WWW server searchable via <A
HREF="http://www.searchtools.com/tools/tools.html">Web Server Search
Tools or <A
HREF="http://www.glue.umd.edu/~dlrg/filter/software.html">Information
filtering tools


 Design decisions depend on features such as corpus
size, available memory, queryr response time, etc. Two implementations
have been developed to acocmpany this textbook, an earlier one in C and
a more recent one in Java; see FOA website
for details.

Subsections

	 2.5.1 Basic algorithm
	 2.5.2 Fine points
	 2.5.3 Software libraries




Top of Page

 | UP: Extracting Lexical Features

 | ,FOA Home 





FOA &copy; R. K. Belew - 00-09-21



